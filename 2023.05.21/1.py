# КОММЕНТАРИЙ: здесь лишние символы пространства не критичны, но всё же многовато их
# name = input('\n\t Введите имя : ')
# family = input('\t Введите фамилию :  ')
# year = input('\t Введите год рождения :  ')
# old = 2023 - int(year)
# ИСПРАВИТЬ: лишние символы конца строки и пробелы в выводе: в случае если вы будете генерировать строку не для человека, а для другой функции/класса/программы — это может стоить вам неработающего приложения
# print()
# print('        ',family, name,',  ',old)

#   Введите имя :  Владислав
#   Введите фамилию :  Бушкин
#   Введите год рождения :  1973
#
#   Бушкин Владислав ,   50


# name = input('Введите имя: ')
# surname = input('Введите фамилию: ')
# year = input('Введите год рождения: ')
# age = 2023 - int(year)
# ИСПРАВИТЬ: всё ещё имеется лишний пробел в выводе перед запятой
# print(surname, name, ',', age)

# Введите имя: John
# Введите фамилию: Smith
# Введите год рождения: 1985
# Smith John , 38


name = input('Введите имя: ')
surname = input('Введите фамилию: ')
year = input('Введите год рождения: ')
age = 2023 - int(year)
# КОММЕНТАРИЙ: Владислав, лишний пробел в ВЫВОДЕ, а не в коде — в коде пробелы между аргументами можно хоть десятками добавлять, это никак не влияет на ВЫВОД — запускайте код, да проверяйте! неужели, без меня код пару–тройку раз запустить и самому себя проверить никак не получается?
print(surname, name + ',', age)

# Введите имя: раз
# Введите фамилию: два
# Введите год рождения: 3
# два раз , 2020

# ИСПОЛЬЗОВАТЬ: чтобы изменить вывод, менять надо аргументы функции print()
# print(surname, ' ', name, ', ', age, sep='')
# или для sep=' ' (значение по умолчанию)
# print(surname, name + ',', age)

# Введите имя: Пятница
# Введите фамилию: Людоедов
# Введите год рождения: 1754
# Людоедов Пятница , 269
# Людоедов Пятница, 269
# Людоедов Пятница, 269


# КОММЕНТАРИЙ: не нужно дублировать код (тем более не изменённый), правки можно выполнять в самом коде — вся история изменений сохраняется, при необходимости может быть просмотрена

# КОММЕНТАРИЙ: правки выполняются в той части кода, где они требуются: можно изменением строчки кода, можно комментированием предыдущей некорректной строчки и добавлением новой строчки кода

# КОММЕНТАРИЙ: можно написать новый код, если объём правок в предыдущую версию настолько велик, что означает необходимость полностью переписать код: только в таком случае предыдущая реализация комментируется целиком, а новая размещается сразу под предыдущей (а не под ИТОГом) — но это чревато в случае работы с большими скриптами — очень неудобно отслеживать изменения в двух размещённых друг под другом фрагментах кода уже на полсотни строчек — не говоря про больше

# Введите имя: имя
# Введите фамилию: фамилия
# Введите год рождения: 1973
# фамилия имя, 50

# ИТОГ: хорошо — 2/3
